input {
  cloudwatch_logs {
    log_group => "<%= @env %>_flow_log_group"
    region => "<%= @aws_region %>"
    type => "flowlog"
    sincedb_path => "/usr/share/logstash/.sincedb_cloudwatch"
    start_position => "end"
  }
}

filter {
  grok {
    match => { "message" => "%{NUMBER:version} %{NUMBER:account-id} %{NOTSPACE:interface-id} %{NOTSPACE:srcaddr} %{NOTSPACE:dstaddr} %{NOTSPACE:srcport} %{NOTSPACE:dstport} %{NOTSPACE:protocol} %{NOTSPACE:packets} %{NOTSPACE:bytes} %{NUMBER:start} %{NUMBER:end} %{NOTSPACE:action} %{NOTSPACE:log-status}" }
  }
  if "-" in [bytes] {
    mutate {
      replace => { "bytes" => "0" }
    }
  }
  if "-" in [dstaddr] {
    mutate {
      replace => { "dstaddr" => "0.0.0.0" }
    }
  }
  if "-" in [dstport] {
    mutate {
      replace => { "dstport" => "0" }
    }
  }
  geoip {
      # perform a geoip lookup on the dstaddr
      source => "dstaddr"
  }
  if "-" in [packets] {
    mutate {
      replace => { "packets" => "0" }
    }
  }
  if "-" in [protocol] {
    mutate {
      replace => { "protocol" => "0" }
    }
  }
  if "-" in [srcaddr] {
    mutate {
      replace => { "srcaddr" => "0.0.0.0" }
    }
  }
  if "-" in [srcport] {
    mutate {
      replace => { "srcport" => "0" }
    }
  }
  geoip {
      # perform a geoip lookup on the dstaddr
      source => "srcaddr"
  }
}
