input {
   s3 {
     region => "<%= @aws_region %>"
     bucket => "<%= @proxy_logging_bucket %>"
     type => "proxyelb"
     sincedb_path => "/usr/share/logstash/.sincedb_proxyelb"
   }
   s3 {
     region => "<%= @aws_region %>"
     bucket => "<%= @elb_logging_bucket %>"
     type => "elb"
     sincedb_path => "/usr/share/logstash/.sincedb_elb"
     prefix => "<%= @elb_prefix %>"
   }
}

filter {
  if [type] == "elb" {
    grok {
      match => { "message" => "\A%{WORD:type} %{TIMESTAMP_ISO8601:timestamp} %{NOTSPACE:elb} %{HOSTPORT:clientport} %{HOSTPORT:targetport} %{ISO8601_SECOND:request_processing_time} %{ISO8601_SECOND:target_processing_time} %{ISO8601_SECOND:response_processing_time} %{INT:elb_status_code} %{INT:target_status_code} %{INT:received_bytes} %{INT:sent_bytes} %{QS:request} %{QS:user_agent} %{NOTSPACE:ssl_cipher} %{NOTSPACE:ssl_protocol} %{NOTSPACE:target_group_arn} %{QS:trace_id} " }
    }
  }
}

filter {
  if [type] == "proxyelb" {
    grok {
      match => { "message" => '%{TIMESTAMP_ISO8601:timestamp} %{NOTSPACE:elb_name} %{IP:elb_client_ip}:%{NUMBER:elb_client_port} %{IP:elb_backend_ip}:%{NUMBER:elb_backend_port} %{NUMBER:request_processing_time} %{NUMBER:backend_processing_time} %{NUMBER:response_processing_time} (?:%{NUMBER:elb_status_code}|-) (?:%{NUMBER:backend_status_code}|-) %{NUMBER:elb_received_bytes} %{NUMBER:elb_sent_bytes} "(?:%{QS:elb_request}|-)" "(?:%{QS:userAgent}|-)" %{NOTSPACE:elb_sslcipher} %{NOTSPACE:elb_sslprotocol}' }
    }
  }
}

