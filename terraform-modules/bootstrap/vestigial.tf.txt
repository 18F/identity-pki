# vim: set ft=terraform :

# This file contains vestigial terraform config that was not actually
# incorporated into the bootstrap module or its callers.
#
# Ideally we would have put the aws_launch_configuration resource into the
# module, because it is largely the same across each auto scaling group, so
# there is some duplication of config.
#
# However, there is a terraform bug that makes it impossible to split the
# aws_autoscaling_group and the aws_launch_configuration across a module
# boundary. Even when you have lifecycle { create_before_destroy }, terraform
# will fail to update the attached launch configuration on the ASG, which means
# that the existing LC cannot be destroyed, and the apply fails.
#
# https://github.com/terraform-providers/terraform-provider-aws/issues/681

# This config is preserved here in the event that the bug is fixed and we want
# to change the interface in the future. Instead of having the output of this
# module be the rendered cloudinit template user-data string, the output of
# this module would be the name of the aws_launch_configuration that the module
# created.

# =======================
# ==    MODULE CODE    ==
# =======================

# aws_launch_configuration variables
variable "image_id" { description = "LC AMI ID" }
variable "instance_type" { description = "LC instance type" }
variable "key_name" { description = "LC ssh key name" }
variable "security_groups" {
    description = "LC security group IDS"
    type = "list"
}

output "launch_config_id" {
    value = "${aws_launch_configuration.bootstrap.id}"
}
output "launch_config_name" {
    value = "${aws_launch_configuration.bootstrap.name}"
}

# Current output, should be removed:
output "rendered_cloudinit_config" {
    value = "${data.template_cloudinit_config.bootstrap.rendered}"
}

resource "aws_launch_configuration" "bootstrap" {
    name_prefix = "${var.env}-${var.role}-"

    lifecycle {
        create_before_destroy = true
    }

    image_id = "${var.image_id}"
    instance_type = "${var.instance_type}"
    key_name = "${var.key_name}"
    security_groups = ["${var.security_groups}"]

    user_data = "${data.template_cloudinit_config.bootstrap.rendered}"
}

# =================================
# ==    CALLER TERRAFORM CODE    ==
# =================================

module "jumphost_launch_config" {
    source = "../terraform-modules/boostrap/"

    # ... [ all the other existing config here ]


    # aws_launch_configuration variables
    image_id = "${var.jumphost_ami_id}"
    instance_type = "${var.instance_type_jumphost}"
    key_name = "${var.key_name}"
    security_groups = ["${aws_security_group.jumphost.id}"]
}

resource "aws_autoscaling_group" "jumphost" {
    launch_configuration = "${module.jumphost_launch_config.launch_config_name}"

    # ... [ rest of the config unchanged ]
}

