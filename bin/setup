#!/usr/bin/env ruby
require 'pathname'
require 'fileutils'
require 'yaml'
include FileUtils

# path to your application root.
APP_ROOT = Pathname.new File.expand_path('../../', __FILE__)

def run(command)
  abort "command failed (#{$?}): #{command}" unless system command
end

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file.

  puts %q[
   _             _
  | |           (_)
  | | ___   __ _ _ _ __    __ _  _____   __
  | |/ _ \ / _` | | '_ \  / _` |/ _ \ \ / /
  | | (_) | (_| | | | | || (_| | (_) \ V /
  |_|\___/ \__, |_|_| |_(_)__, |\___/ \_/
            __/ |          __/ |
           |___/          |___/
  ]

  puts '== Setting up config overrides =='
  default_application_yml = { 'development' => { 'config_key' => nil } }
  File.write('config/application.yml', default_application_yml.to_yaml) unless File.exists?('config/application.yml')


  puts '== Installing dependencies =='
  system! 'gem install bundler --conservative'
  run 'gem install foreman --conservative && gem update foreman'
  system('bundle check') || system!('bundle install --without deploy production')

  puts '== Setting up certificates =='
  Dir.chdir('config/local-certs') do
    system! 'make'
  end

  # Install JavaScript dependencies if using Yarn
  # system('bin/yarn')


  # puts "\n== Copying sample files =="
  # unless File.exist?('config/database.yml')
  #   cp 'config/database.yml.sample', 'config/database.yml'
  # end

  puts "\n== Preparing database =="
  run 'bin/rake db:create'
  run 'bin/rake db:environment:set'
  run 'bin/rake db:reset'
  run 'bin/rake db:environment:set'
  run 'bin/rake db:create RAILS_ENV=test'
  run 'bin/rake db:reset RAILS_ENV=test'

  puts "\n== Removing old logs and tempfiles =="
  system! 'bin/rails log:clear tmp:clear'

  puts "\n== Restarting application server =="
  system! 'bin/rails restart'
end
