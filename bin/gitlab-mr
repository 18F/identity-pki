#!/bin/bash

# Powerful/quick way to create merge requests easily using glab merge-request

set -eu

. "$(dirname "$0")/lib/common.sh"
. "$(dirname "$0")/lib/gitlab.sh"

usage() {
  cat >&2 <<EOM

Usage: ${0} -t 'MR_TITLE' [-s]|[-g 'AWS_GROUP'][-u 'USER1,USER2'] [-p]

Runs \`glab mr create\` with validation and custom args.

Arguments:
  -t : Title of the merge request (required)
  -g : aws_group entry (from terraform/master/global/users.yaml)
       to create a list of reviewers from
  -u : Comma-separated list of Gitlab users to set as reviewers
       (vs. using a group via -g)
  -s : Skip prompting for a group/user(s) to add, and create the MR
       with no specified reviewers
  -p : Also add all changes, commit, and push/set upstream to origin

EOM
}

verify_root_repo

declare {PUSH,MR_TITLE,FOUND_REVIEWERS,REVIEW_FLAG}=
FOUND_REVIEWERS=false
while getopts :t:g:u:sp opt; do
  case "${opt}" in
  t) MR_TITLE=("${OPTARG}") ;;
  g) GL_REV_GROUP="${OPTARG}" ;;
  u) GL_REV_USERS=("${OPTARG}") ;;
  s) FOUND_REVIEWERS=true ;;
  p) PUSH=true ;;
  *)
    usage
    exit 1
    ;;
  esac
done

# if no group(s)/user(s) provided, prompt accordingly
while [[ ${FOUND_REVIEWERS} == false ]]; do
  if [[ -z ${GL_REV_GROUP:-} ]] && [[ -z "${GL_REV_USERS[@]:-}" ]]; then
    FOUND_REVIEWERS=false
    echo && echo_yellow "No users/group specified as reviewers for this MR."
    if prompt_yn "Would you like to add users (individually/from an AWS group) as reviewers?"; then
      read -r -p \
        "AWS group (from terraform/master/users.yaml) to get users from (leave blank to skip): " GL_REV_GROUP
      read -r -p \
        "Users to add as reviewers (additionally/instead of from a group), comma-separated (leave blank to skip): " GL_REV_USERS
    else
      echo_yellow "Will not add reviewers for this MR."
      FOUND_REVIEWERS=true
    fi
  else
    FOUND_REVIEWERS=true
  fi
done

if [[ "${PUSH}" == true ]]; then
  run git add --all
  run git commit -m "${MR_TITLE[@]}"
  run git push --set-upstream origin $(git_current_branch)
fi

run glab mr create --yes --assignee "$(get_glab_assignee)" \
  --reviewer "$(get_reviewer_list_without_assignee)" \
  --title "${MR_TITLE[@]}"
