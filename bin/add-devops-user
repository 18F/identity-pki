#!/usr/bin/env ruby

require 'optparse'
require 'yaml'

USERS_YAML = 'terraform/master/global/users.yaml'

def run
  config = {
    username: nil,
    aws_groups: [],
  }

  parser = OptionParser.new do |opts|
    opts.banner = <<~EOS
      Adds a user to #{USERS_YAML}

      #{$PROGRAM_NAME} --username billbob --aws-groups sandbox-power,sandbox-terraform
    EOS

    opts.on('--username NAME', "the AWS username for this user") do |username|
      config[:username] = username
    end

    opts.on('--aws-groups A,B,C', Array, "the AWS groups for this user, comma-separated") do |groups|
      config[:aws_groups] = groups
    end
  end

  parser.parse!

  if config[:username].nil? || config[:aws_groups].empty?
    puts parser
    exit 1
  end

  yaml = YAML.load_file(USERS_YAML)


  yaml['users'][config[:username]] = {
    'aws_groups' => config[:aws_groups],
  }

  # make sure users is sorted, root (denoted by __note) is last
  sorted_users = yaml['users'].sort_by do |username, attributes|
    [attributes.key?('__note') ? 1 : 0, username]
  end.to_h

  yaml['users'] = sorted_users
  File.open(USERS_YAML, 'w') { |f| f.puts YAML.dump(yaml) }
end

if $PROGRAM_NAME == __FILE__
  run
end