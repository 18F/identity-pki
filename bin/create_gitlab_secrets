#!/bin/bash

# Creates secrets necessary for Gitlab environment, assumes you have already applied Terraform
# For creating an environment through Terraform, follow instructions in the wiki: https://github.com/18F/identity-devops/wiki/Setting-up-new-Gitlab-environment

set -eu

MYTMPDIR="$(mktemp -d)"
trap 'rm -rf -- "$MYTMPDIR"' EXIT

usage() {
    cat >&2 << EOM

Usage: ${0} GITLAB_ENV

Creates a new path in our Gitlab secrets for an environment's
secrets and walks through creating all the secrets.

EOM
}

BUCKET=login-gov.secrets.034795980528-us-west-2

check_present=`aws-vault exec tooling-admin -- aws s3 ls s3://$BUCKET/$1|wc -c`
echo $check_present
if [[ "${check_present}" -eq 0 ]]; then
    echo "There is no folder for $1 setup in the bucket $BUCKET. Please check your spelling or that it exists."
    exit 1
fi

aws-vault exec tooling-admin -- aws ec2 describe-volumes --query 'Volumes[*].[VolumeId]' --filters Name=tag-value,Values=login-gitlab-$1 --output text > $MYTMPDIR/gitlab_ebs_volume
aws-vault exec tooling-admin -- aws ec2 describe-volumes --query 'Volumes[*].[VolumeId]' --filters Name=tag-value,Values=login-gitaly-$1 --output text > $MYTMPDIR/gitaly_ebs_volume
aws-vault exec tooling-admin -- aws elasticache describe-replication-groups --replication-group-id $1-gitlab --query 'ReplicationGroups[*].NodeGroups[*].PrimaryEndpoint.Address' --output text > $MYTMPDIR/gitlab_redis_endpoint
aws-vault exec tooling-admin -- aws rds describe-db-instances --db-instance-identifier login-$1-gitlab --query 'DBInstances[*].Endpoint.Address' --output text > $MYTMPDIR/gitlab_db_host

openssl req -nodes -x509 -days 365 -newkey rsa:2048 -keyout $MYTMPDIR/saml_private_key -out $MYTMPDIR/saml_certificate
curl -s https://idp.int.identitysandbox.gov/api/saml/metadata2024 \
| xml sel -N x="http://www.w3.org/2000/09/xmldsig#" -t -v '(//x:X509Certificate)[1]' \
| fold -w 64 \
| awk 'BEGIN{print "-----BEGIN CERTIFICATE-----"}1' \
| awk 'END{print "-----END CERTIFICATE-----"}1' \
| openssl x509 -noout -fingerprint \
| sed -E 's/.*=//' > $MYTMPDIR/saml_idp_cert_fingerprint


echo
echo "What is the slack webhook you wish to use?"
read slackwebhook
echo $slackwebhook > $MYTMPDIR/slackwebhook
echo "#login-change" > $MYTMPDIR/slackchannel

echo
echo "What db password did you set as part of the terraform apply process?"
read db_password
echo $db_password > $MYTMPDIR/gitlab_db_password

# Replace the ruby script with bash, currently devise throws an error and needs to install rails for a one line script
generate_friendly_token() {
    cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 20 | head -n 1
}

generate_friendly_token > $MYTMPDIR/gitlab_runner_token
generate_friendly_token > $MYTMPDIR/gitlab_root_password

echo
echo "The following files have been created. Please review them."
ls $MYTMPDIR

echo
read -p "Would you like to create these files on s3 for $1? y/n" -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
    echo "Doing nothing."
    exit 1
fi

echo "Creating files on s3 at s3://${BUCKET}/$1/..."

aws-vault exec tooling-admin -- aws s3 cp $MYTMPDIR/ s3://${BUCKET}/$1/ --recursive
