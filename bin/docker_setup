#!/usr/bin/env ruby
require 'pathname'

# path to your application root.
APP_ROOT = Pathname.new File.expand_path("../../",  __FILE__)

def run(command)
  abort "command failed (#{$?}): #{command}" unless system command
end

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

Dir.chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file:

  puts %q[
   _             _
  | |           (_)
  | | ___   __ _ _ _ __    __ _  _____   __
  | |/ _ \ / _` | | '_ \  / _` |/ _ \ \ / /
  | | (_) | (_| | | | | || (_| | (_) \ V /
  |_|\___/ \__, |_|_| |_(_)__, |\___/ \_/
            __/ |          __/ |
           |___/          |___/
  ]

  # This file is intended to run after `docker-compose up`
  #  it runs commands that won't work at build time and therefore must be runuted at runtime.

  puts '== Setting up certificates =='
  Dir.chdir('config/local-certs') do
    system! 'make'
  end

  puts "== Creating and migrating dev database =="
  run "docker-compose run --rm web rake db:create"
  # The following pattern prevents a database reset from happening in prod.
  run "docker-compose run --rm web rake db:environment:set"
  run "docker-compose run --rm web rake db:reset"
  run "docker-compose run --rm web rake db:environment:set"
end