#!/bin/bash
. "$(dirname "$0")/../lib/common.sh"

LOGIN_REVS="jgrevich,sharms,mzia,amitfreeman-gov,pauldoomgov"

usage() {
  cat >&2 <<EOM

Usage: $0 [ flags ]

    flags    ::= a(ll)
                 g(ithubrc)
                 l(ogin-alias)
                 r(emove run)
                 e(nv vars)

Adds various aliases, functions, and environment variables
used by/calling various tools within identity-devops. Steps:

1. Verify \$HOME/.login-functions and \$HOME/.githubrc
   and then prompt to recreate for each (ignored with -l / -g / -a)
2. Verify AWS/GSA/KITCHEN env vars and prompt for any
   not yet set (force with -e)
3. Update \$PATH to include 'identity-devops/bin'
4. Add \$HOME/.login-functions and \$HOME/.githubrc to
   your shell's rc file (skip if already present)

Optional:
  -r        Do NOT print commands to the console via run()
  -e        Reset ALL environment variables

EOM
}

# cat repo-based file into homedir, then add to shell rc file
append_with_rc() {
  # shellcheck disable=SC2039
  local rc="${1}"

  echo >> "$HOME/.${rc}"
  cat "$(dirname "$0")/../lib/dotfiles/${rc}" >> "$HOME/.${rc}"
  local text="source \$HOME/.${rc}"
  if ! grep -qs "^$text$" "${shell_rc}"; then
    echo && echo_cyan "Adding \`source \$HOME/.$rc\` to ${shell_rc}..."
    run printf "%s\n" "$text" >> "${shell_rc}"
  fi
  echo
}

# echo ENV_VAR if declared, otherwise prompt to change
set_env_var() {
  local rc="${1}"
  local ENV_VAR=${2}
  VAR_VAL=$(eval echo \$$ENV_VAR)
  if [[ -z "$VAR_VAL" ]]; then
    read -r -p "$ENV_VAR not set; enter desired value: " VAR_VAL
  else
    echo_yellow "$ENV_VAR already set: '$VAR_VAL'"
  fi

  local text="export $ENV_VAR=\"$VAR_VAL\""
  if ! grep -qs "^${text}$" "$HOME/.${rc}"; then
    printf "%s\n" "$text" >> "$HOME/.${rc}"
  fi
}

remove_rc_file () {
  echo && echo_cyan "Removing old \$HOME/.${1} file..."
  run rm -f "$HOME/.${1}"
  echo
  return 10
}

touch_rc_file () {
  echo && echo_cyan "Creating \$HOME/.${1}..."
  run touch "$HOME/.${1}"
  echo
  return 10
}

rebuild_rc_file() {
  local rc="${1}"

  if [[ -f "$HOME/.${rc}" ]] ; then
    if ! prompt_yn "\$HOME/.${rc} already exists; recreate?"; then
      echo_cyan "Skipping recreation of \$HOME/.${rc}."
      echo
      return
    else
      remove_rc_file "${rc}"
    fi
  else
    touch_rc_file "${rc}"
  fi
}

new_rc_file() {
  local rc="${1}"
  remove_rc_file "${rc}"
  touch_rc_file "${rc}"
}

create_login_rc () {
  # add identity-devops/bin to $PATH
  ID_DIR="$(cd $(dirname "${BASH_SOURCE[0]}") && pwd | sed 's/oneoffs//')"
  echo_cyan "Adding '$ID_DIR' to \$PATH..."
  run echo "export PATH=$ID_DIR:\$PATH" >> "$HOME/.login-functions"
  echo

  # verify AWS_ / GSA_ / KITCHEN_ env vars
  echo_cyan "Verifying env vars..."
  for ENV_VAR in AWS_PROFILE\
                 GSA_USERNAME\
                 GSA_FULLNAME\
                 GSA_EMAIL\
                 GITHUB_SSH_KEY\
                 KITCHEN_EC2_SSH_KEYPAIR_ID\
                 KITCHEN_EC2_SSH_KEY ; do set_env_var login-functions $ENV_VAR ; done
  echo_cyan "Env vars verified for $HOME/.login-functions file."
  append_with_rc "login-functions"
}

create_github_rc () {
  echo_cyan "Verifying env vars..."
  for ENV_VAR in GITHUB_PARENT_DIR LOGIN_REVS ; do set_env_var githubrc $ENV_VAR ; done
  echo_cyan "Env vars verified for $HOME/.githubrc file."
  append_with_rc "githubrc"
}

case "$SHELL" in
  */fish)
    shell_rc="$HOME/.config/fish/config.fish"
  ;;
  */zsh)
    if [ -w "$HOME/.zshrc.local" ]; then
      shell_rc="$HOME/.zshrc.local"
    else
      shell_rc="$HOME/.zshrc"
    fi
  ;;
  *)
    shell_rc="$HOME/.bash_profile"
  ;;
esac

while getopts aglre opt ; do
case ${opt} in
  a) 
    for file in login-functions githubrc ; do new_rc_file "${file}" ; done
    create_login_rc && create_github_rc
  ;;
  g)
    new_rc_file 'githubrc'
    create_github_rc
  ;;
  l)
    new_rc_file 'login-functions'
    create_login_rc
  ;;
  r) 
    export USE_RUN=0
    for file in login-functions githubrc ; do
      sed -i '' -E "s/(USE_RUN=)1/\10/" "$HOME/.${file}"
    done && echo "Output of run() suppressed."
  ;;
  e)
    if ! prompt_yn "Clear out ALL env vars?"; then
      echo_cyan "Not clearing env vars."
      echo
      return
    else
      echo_cyan "Clearing env vars..."
      for ENV_VAR in AWS_PROFILE\
                     GSA_USERNAME\
                     GSA_FULLNAME\
                     GSA_EMAIL\
                     GITHUB_SSH_KEY\
                     KITCHEN_EC2_SSH_KEYPAIR_ID\
                     KITCHEN_EC2_SSH_KEY\
                     GITHUB_PARENT_DIR\
                     LOGIN_REVS ; do
        unset $ENV_VAR
        echo "$ENV_VAR unset."
      done
    fi
  ;;
  *)
    usage
    exit
  ;;
esac
done
if [ $OPTIND -eq 1 ]; then 
  usage
  exit
fi

if [[ $# == 0 ]] ; then
  echo
  echo_green "Ready to configure \$HOME/.login-functions file."
  rebuild_rc_file 'login-functions'
  [[ "${?}" == '10' ]] && create_login_rc
  
  echo_green "Ready to configure \$HOME/.githubrc file."
  rebuild_rc_file 'githubrc'
  if [[ "${?}" == '10' ]] ; then
    create_github_rc
  else
    exit 0
  fi
fi

echo_green "Done, run \`source ${shell_rc}\` to load the login.gov aliases/functions."
