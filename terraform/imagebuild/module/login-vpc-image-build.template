{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates a vpc used to build out login.gov ami's",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCCIDR",
                        "PublicSubnet1CIDR"
                    ]
                }
            ],
            "ParameterLabels": {
                "VPCCIDR":{
                    "default": "VPC CIDR"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public subnet 1 CIDR"
                },
                "PrivateSubnet1CIDR": {
                    "default": "Private subnet 1 CIDR"
                },
                "EIPNatGatewayAddress":{
                    "default": "Elastic IP address for NAT gateway"
                },
                "EIPNatGatewayAllocationID":{
                    "default": "Allocation ID for EIPNatGatewayAddress"
                }
            }
        }
    },
    "Parameters": {
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.1.0/24",
            "Description": "CIDR block for the public subnet 1",
            "Type": "String"
        },
        "PrivateSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.11.0/24",
            "Description": "CIDR block for the private subnet 1",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/19",
            "Description": "CIDR block for the VPC",
            "Type": "String"
        },
        "EIPNatGatewayAddress": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "ConstraintDescription": "IP address must be in the form x.x.x.x",
            "Description": "Elastic IP address to be associated with the NAT gateway",
            "Type": "String"
        },
        "EIPNatGatewayAllocationID": {
            "AllowedPattern": "^(eipalloc-)([0-9a-f]{8}([0-9a-f]{9})?)$",
            "ConstraintDescription": "Allocation ID must be in the form 'eipalloc-X', where X is 8 or 17 characters.",
            "Description": "Allocation ID of the EIPNatGatewayAddress parameter above",
            "Type": "String"
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCCIDR"
                },
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "login-vpc-image-build"
                    },
                    {
                        "Key": "Stack",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ]
            }
        },
        "PublicSubnetAcl": {
            "Type" : "AWS::EC2::NetworkAcl",
            "Properties" : {
               "Tags": [ 
                   {
                        "Key": "Name",
                        "Value": "login-image-build_public-network-acl"
                    },
                    {
                        "Key": "Stack",
                        "Value": {
                        "Ref": "AWS::StackName"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicSubnetAclEntryOutbound": {
            "Type": "AWS::EC2::NetworkAclEntry",
                "Properties": {
                    "CidrBlock": "0.0.0.0/0",
                    "Egress": "true",
                    "Protocol": "-1",
                    "RuleAction": "allow",
                    "RuleNumber": "100",
                    "NetworkAclId": {
                        "Ref": "PublicSubnetAcl"
                }
            }
        },
        "PublicSubnetAclEntryInbound": {
            "Type": "AWS::EC2::NetworkAclEntry",
                "Properties": {
                    "CidrBlock": "0.0.0.0/0",
                    "Egress": "false",
                    "Protocol": "-1",
                    "RuleAction": "allow",
                    "RuleNumber": "100",
                    "NetworkAclId": {
                        "Ref": "PublicSubnetAcl"
                    }
                }
            },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "login-image-build_gateway"
                    },
                    {
                        "Key": "Stack",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ]
            }
        },
        "VPCGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PublicSubnet1CIDR"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "login-image-build_public-subnet1"
                    },
                    {
                        "Key": "Stack",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ],
                "MapPublicIpOnLaunch": true
            }
        },
        "PublicSubnet1NaclAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
                "Properties": {
                    "SubnetId": {
                        "Ref": "PublicSubnet1"
                    },
                    "NetworkAclId": {
                        "Ref": "PublicSubnetAcl"
                    }
                }
        },
        "PublicSubnetRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "login-image-build_route-table"
                    },
                    {
                        "Key": "Stack",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ]
            }
        },
        "PublicSubnetRoute": {
            "DependsOn": "VPCGatewayAttachment",
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicSubnetRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PublicSubnetRouteTable"
                }
            }
        },
        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PrivateSubnet1CIDR"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "login-image-build_private-subnet1"
                    },
                    {
                        "Key": "Stack",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ]
            }
        },
        "PrivateSubnetAcl": {
            "Type" : "AWS::EC2::NetworkAcl",
                "Properties" : {
                   "Tags": [ 
                       {
                            "Key": "Name",
                            "Value": "login-image-build_private-network-acl"
                        },
                        {
                            "Key": "Stack",
                            "Value": {
                            "Ref": "AWS::StackName"
                            }
                        }
                    ],
                    "VpcId": {
                        "Ref": "VPC"
                    }
                }
            },
            "PrivateSubnetAclEntryOutbound": {
                "Type": "AWS::EC2::NetworkAclEntry",
                    "Properties": {
                        "CidrBlock": "0.0.0.0/0",
                        "Egress": "true",
                        "Protocol": "-1",
                        "RuleAction": "allow",
                        "RuleNumber": "100",
                        "NetworkAclId": {
                            "Ref": "PrivateSubnetAcl"
                    }
                }
            },
            "PrivateSubnetAclEntryInbound": {
                "Type": "AWS::EC2::NetworkAclEntry",
                    "Properties": {
                        "CidrBlock": "0.0.0.0/0",
                        "Egress": "false",
                        "Protocol": "-1",
                        "RuleAction": "allow",
                        "RuleNumber": "100",
                        "NetworkAclId": {
                            "Ref": "PrivateSubnetAcl"
                        }
                    }
                },
        "PrivateSubnet1NaclAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
                "Properties": {
                    "SubnetId": {
                        "Ref": "PrivateSubnet1"
                    },
                    "NetworkAclId": {
                        "Ref": "PrivateSubnetAcl"
                    }
                }
        },
        "PrivateSubnet1RouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "login-image-build_private1-route-table"
                    },
                    {
                        "Key": "Stack",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ]
            }
        },
        "PrivateSubnet1Route": {
            "DependsOn": "NatGateway1",
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateSubnet1RouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NatGateway1"
                }
            }
        },
        "PrivateSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PrivateSubnet1RouteTable"
                }
            }
        },
        "NatGateway1": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
              "AllocationId": { "Ref": "EIPNatGatewayAllocationID" },
              "SubnetId": { "Ref": "PublicSubnet1" },
              "Tags" : [ { "Key": "Name", "Value": "imagebuild-nat-gateway"} ] 
            },
            "DependsOn" : "InternetGateway"
        },
        "PublicSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enables SSH Access for image building",
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags":[
                    {
                        "Key": "Name",
                        "Value": "login-image-build_public-security-group"
                    },
                    {
                        "Key": "Stack",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "TCP",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Fn::Join": [ "", [{ "Ref": "EIPNatGatewayAddress" }, "/32"] ]
                        }
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "TCP",
                        "ToPort": "22",
                        "FromPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "TCP",
                        "ToPort": "80",
                        "FromPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "TCP",
                        "ToPort": "443",
                        "FromPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "PrivateSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security Group for CodeBuild",
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags":[
                    {
                        "Key": "Name",
                        "Value": "login-image-build_private-security-group"
                    },
                    {
                        "Key": "Stack",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "-1",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": {"Ref": "VPCCIDR"}
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "-1",
                        "ToPort": "-1",
                        "FromPort": "-1",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "S3Endpoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties" : {
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": "*",
                            "Action": [
                                "*"
                            ],
                            "Resource": [
                                "*"
                            ]
                        }
                    ]
                },
                "RouteTableIds": [
                    {"Ref": "PublicSubnetRouteTable"}, 
                    {"Ref": "PrivateSubnet1RouteTable"}
                ],
                "ServiceName": {"Fn::Sub": "com.amazonaws.${AWS::Region}.s3"},
                "VpcId": {"Ref": "VPC"}
            }   
        },
        "FlowLogsCloudWatchGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": {"Fn::Sub": "${AWS::StackName}-FlowLogs"}
            }
        },
        "FlowLogsRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [{
                        "Sid": "",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": ["vpc-flow-logs.amazonaws.com"]
                        },
                        "Action": "sts:AssumeRole"
                    }]
                }
            }
        },
        "FlowLogsRolePolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "FlowLogsRolePolicy",
                "PolicyDocument": {
                    "Statement": [{
                        "Effect": "Allow",
                        "Resource": [
                            {"Fn::GetAtt": ["FlowLogsCloudWatchGroup", "Arn"]}
                        ],
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams"
                        ]
                    }]
                },
                "Roles": [{"Ref": "FlowLogsRole"}]
            }
        },
        "CodeBuildVPCFlowLogs": {
            "Type": "AWS::EC2::FlowLog",
            "Properties": {
                  "DeliverLogsPermissionArn": {"Fn::GetAtt": ["FlowLogsRole", "Arn"]},
                  "LogGroupName": {"Ref": "FlowLogsCloudWatchGroup"},
                  "ResourceId": {"Ref": "VPC"},
                  "ResourceType": "VPC",
                  "MaxAggregationInterval": 60,
                  "TrafficType": "ALL"
            }
        }
    },
    "Outputs": {
        "PublicSubnet1CIDR": {
            "Description": "Public subnet 1 CIDR",
            "Value": {
                "Ref": "PublicSubnet1CIDR"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PublicSubnet1CIDR"
                }
            }
        },
        "PrivateSubnet1CIDR": {
            "Description": "Private subnet 1 CIDR",
            "Value": {
                "Ref": "PrivateSubnet1CIDR"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PrivateSubnet1CIDR"
                }
            }
        },
        "PublicSubnet1ID": {
            "Description": "Public subnet 1 ID",
            "Value": {
                "Ref": "PublicSubnet1"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PublicSubnet1ID"
                }
            }
        },
        "PrivateSubnet1ID": {
            "Description": "Private subnet 1 ID",
            "Value": {
                "Ref": "PrivateSubnet1"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PrivateSubnet1ID"
                }
            }
        },
        "PublicSubnetRouteTable": {
            "Value": {
                "Ref": "PublicSubnetRouteTable"
            },
            "Description": "Public subnet route table",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PublicSubnetRouteTable"
                }
            }
        },
        "PublicSecurityGroupId": {
            "Value": {
                "Ref": "PublicSecurityGroup"
            },
            "Description": "Security Group Id for Public Subnet",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PublicSecurityGroupId"
                }
            }
        },
        "PrivateSecurityGroupId": {
            "Value": {
                "Ref": "PrivateSecurityGroup"
            },
            "Description": "Security Group Id for Private Subnet",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PrivateSecurityGroupId"
                }
            }
        },
        "VPCCIDR": {
            "Value": {
                "Ref": "VPCCIDR"
            },
            "Description": "VPC CIDR",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-VPCCIDR"
                }
            }
        },
        "VPCID": {
            "Value": {
                "Ref": "VPC"
            },
            "Description": "VPC ID",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-VPCID"
                }
            }
        }
    }
}
