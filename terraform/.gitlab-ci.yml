include:
  local: /.gitlab-ci-rules.yml

terraform-fmt:
  image:
    name: hashicorp/terraform
    entrypoint: [""]
  script:
    - terraform fmt -recursive -diff -check ./terraform
  rules:
    - !reference [.merge_request, rules]
    - changes:
      - terraform/**/*

# Scanning top level modules to avoid extreme duplication
kics-check-soft:
  image:
    name: checkmarx/kics:v2.1.3
    entrypoint: [""]
  script:
    - kics scan --no-progress -p terraform/$TFDIR -o terraform/$TFDIR --output-name kics-results --report-formats glsast --ignore-on-exit results
  rules:
    - !reference [.merge_request, rules]
    - changes:
      - terraform/$TFDIR/**/*
  artifacts:
    reports:
      sast: terraform/$TFDIR/gl-sast-kics-results.json
  parallel:
    matrix:
      - TFDIR:
        - app
        - gitlab/module
        - modules
        - sms/module
        - data-warehouse/module

# Add folders that should be vuln free and STAY THAT WAY
kics-check-enforce-critical:
  image:
    name: checkmarx/kics:v2.1.3
    entrypoint: [""]
  script:
    - kics scan --no-progress -p terraform/$TFDIR -o terraform/$TFDIR --output-name kics-results --report-formats glsast --fail-on critical
  rules:
    - !reference [.merge_request, rules]
    - changes:
      - terraform/$TFDIR/**/*
  artifacts:
    reports:
      sast: terraform/$TFDIR/gl-sast-kics-results.json
  parallel:
    matrix:
      - TFDIR:
        - core/module
        - all/module

kics-check-enforce-high:
  image:
    name: checkmarx/kics:v2.1.3
    entrypoint: [""]
  script:
    - kics scan --no-progress -p terraform/$TFDIR -o terraform/$TFDIR --output-name kics-results --report-formats glsast --fail-on critical,high
  rules:
    - !reference [.merge_request, rules]
    - changes:
      - terraform/$TFDIR/**/*
  artifacts:
    reports:
      sast: terraform/$TFDIR/gl-sast-kics-results.json
  parallel:
    matrix:
      - TFDIR:
        - tooling/module
        - waf/module

kics-check-enforce-medium:
  image:
    name: checkmarx/kics:v2.1.3
    entrypoint: [""]
  script:
    - kics scan --no-progress -p terraform/$TFDIR -o terraform/$TFDIR --output-name kics-results --report-formats glsast --fail-on critical,high,medium
  rules:
    - !reference [.merge_request, rules]
    - changes:
        - terraform/$TFDIR/**/*
  artifacts:
    reports:
      sast: terraform/$TFDIR/gl-sast-kics-results.json
  parallel:
    matrix:
      - TFDIR:
        - tooling/module-gitlabpipeline
        - imagebuild/module
        - master/module
        - tooling/module-pipeline

users-yaml-validation:
  image: "$ECR_REGISTRY/ecr-public/docker/library/golang"
  rules:
    - !reference [.merge_request, rules]
    - changes:
      - terraform/master/global/users.yaml
  script:
    - cd bin/users
    - make validate

lambda-unit-tests:
  image: "$ECR_REGISTRY/ecr-public/docker/library/python:3.9.18-alpine3.18"
  script:
    - apk add --no-cache bash git
    - ./bin/lambda-utilities/test.sh --coverage --xml
  rules:
    - !reference [.merge_request, rules]
    - changes:
      - terraform/**/*
  coverage: '/TOTAL.* (100\%|\d\d\%)$/'
  artifacts:
    paths:
      - htmlcov/
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: tmp/unittest.xml

lambda-lint:
  image: "$ECR_REGISTRY/ecr-public/docker/library/python:3.9.18-alpine3.18"
  script:
    - apk add --no-cache bash git
    - ./bin/lambda-utilities/lint.sh
  rules:
    - !reference [.merge_request, rules]
    - changes:
      - terraform/**/*
