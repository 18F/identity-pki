#!/usr/bin/env bash

# The terraform version this was tested with
TERRAFORM_VERSION="0.8.8"

# function to exit process with error message
die() { echo "$@" 1>&2 ; exit 1; }

# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail

if [ $# -lt 3 ] ; then
    echo "Usage: $0 <environment_name> <username> <terraform_dir> [<terraform_commands>]"
    echo "   Runs <terraform_commands> against <environment_name> using the"
    echo "   configuration in <terraform_dir>."
    echo "   <username> should be the username of an existing chef user that"
    echo "   Terraform can use to provision chef-client on new nodes."
    exit 1
fi

if [[ "$(terraform --version)" != *"v$TERRAFORM_VERSION"* ]]; then
    die "Version $TERRAFORM_VERSION of terraform currently required"
fi

ENVIRONMENT=$1; shift
GSA_USERNAME=$1; shift
TF_DIR=$1; shift
TF_CMD="$@"
ENVIRONMENT_CONFIG=env/env.sh

echo "DEPLOY: Loading environment variables...."
. bin/load-env.sh $ENVIRONMENT $GSA_USERNAME $ENVIRONMENT_CONFIG

echo "DEPLOY: Checking for required files...."
./bin/check-required-files.sh $ENVIRONMENT

if [ -z "${TF_VAR_chef_id:=}" ] ; then
    die "You must specify an initial chef user.  \
Make sure $ENVIRONMENT_CONFIG contains all the necessary configuration."
fi

if [ -z "${TF_VAR_chef_id:=}" ] ; then
    die "You must specify an environment to terraform.  \
Make sure $ENVIRONMENT_CONFIG contains all the necessary configuration."
fi

STATE=${TF_DIR}/terraform-${TF_VAR_env_name}.tfstate
if [ "${TF_DIR}" == "terraform-dns" -o "${TF_DIR}" == "terraform-cloudtrail" ]; then
    echo "Not using a region specific state file for dns remote config"
    STATE=${TF_DIR}/terraform.tfstate
fi
echo "Using state file $STATE"

echo "Ensuring ${TF_DIR} is a terraform directory"
# NOTE: JJG remove trailing slash from $2 if it exists to ease use with auto completion
if [ ! -f "${TF_DIR}/main.tf" ] ; then
  die "you must specify a terraform project folder"
fi

echo "Configuring state bucket login_dot_gov_tf_state with state path ${STATE}"
bin/configure_state_bucket.sh login_dot_gov_tf_state ${STATE} ${TF_DIR}

cat <<EOF
########################################
#
# Working in environment:
# $TF_VAR_env_name
#
########################################
EOF

cd ${TF_DIR}
terraform ${TF_CMD}
